generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("NITRO_DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar()
  email      String       @unique()
  password   String       @db.VarChar()
  createdAt  DateTime     @default(now()) @db.Timestamp(6)
  updatedAt  DateTime     @updatedAt @db.Timestamp(6)
  Collection Collection[]
}

model Artwork {
  id          String    @id @db.VarChar()
  title       String    @db.VarChar()
  description String?   @db.Text()
  url         String?   @db.VarChar()
  creditLine  String?   @db.VarChar()
  date        String?   @db.VarChar()
  origin      String?   @db.VarChar()
  medium      String?   @db.VarChar()
  preview     String    @db.VarChar()
  images      Json      @db.JsonB()
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  updatedAt   DateTime  @db.Timestamp(6)
  elements    Element[]
}

model Collection {
  id        String    @id @default(cuid()) @db.VarChar(30)
  title     String    @db.VarChar()
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  elements  Element[]
}

model Element {
  id           Int        @id @default(autoincrement())
  collectionId String     @db.VarChar(30)
  collection   Collection @relation(fields: [collectionId], references: [id], onDelete: Cascade)
  artworkId    String     @db.VarChar()
  artwork      Artwork    @relation(fields: [artworkId], references: [id])
  sort         Int        @default(0)
  createdAt    DateTime   @default(now()) @db.Timestamp(6)

  @@unique([collectionId, artworkId])
}
